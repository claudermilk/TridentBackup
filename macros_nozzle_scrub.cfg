## Rewritten from Hernsl & Edwardyeeks and incorporate zellenralex rewrite concepts

[gcode_macro clean_nozzle]
description: Move toolhead to bucket, purge and scrub the nozzle
gcode:	
	{% set user = printer['gcode_macro _USER_VARIABLE'] %}
	{% set pos = user.purge.purge %} # x,y,z location
	{% set move_z = [user.z_hop, printer.toolhead.position.z]|max %}   # Calculate hoihg move from higher of current toolhead location or defined z_hop height (if mag probe stuff is defined)
	
	{% set filament = printer.save_variables.variables.filament %}
    {% set _idx = params.INDEX|default(filament.index)|int %}

    _CG28													# Home if not already homed (removes original error message)
	CASELIGHT_CLEANING
    STATUS_CLEANING
	SAVE_GCODE_STATE NAME=clean_nozzle

	SET_GCODE_OFFSET Z=0.0
	_PRINT_AR T="Cleaning"
	G90													# Absolute positioning
	
#original grabs y max, now in purge.purge.y
#original randomly picks bucket side (0=left, 1=right)
#SET_GCODE_VARIABLE MACRO=clean_nozzle VARIABLE=bucket_pos VALUE={(range(2) | random)}
	{% set leftright = range(2)|random|int %}

	G1 Z{move_z} F{user.speed.z_hop}    		# Move head up for travel
	
	{% if leftright == 0 %} 						# Randomly picked left
        G1 X{[user.purge.wipe.start.x, user.purge.wipe.end.x]|min - 5} Y{pos.y} F{user.speed.travel}	# move over left purge bucket
	{% else %}					# Randomly picked right
		G1 X{[user.purge.wipe.start.x, user.purge.wipe.end.x]|max + 5} Y{pos.y} F{user.speed.travel}	# move over right purge bucket
	{% endif %}
	
	# Heat up hotend to current filament melt temp if needed
	{% if not printer.extruder.can_extrude or (printer['extruder'].temperature < filament.array[_idx].hotend) %}
   	{action_respond_info("Extruder temp too low. Heating to %3.1fC" % [printer.configfile.settings.extruder.min_extrude_temp,filament.array[filament.index].hotend]|max)}
      STATUS_HEATING
      M109 S{[printer.configfile.settings.extruder.min_extrude_temp,filament.array[filament.index].hotend]|max}
      STATUS_CLEANING
   {% endif %}
   
    # Do the purge
    G92 E0												; Reset extruder
    M83													; Extruder to relative
	G1 E{user.filament.retract.end * 1.5} F800	
	G1 E-{user.filament.retract.end} F{user.speed.retract}
	G4 P500
	G92 E0
    _WIPE													# Perform the wipe
	
	_PRINT_AR T="Cleaned!"
	UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1
	RESTORE_GCODE_STATE NAME=clean_nozzle
	CASELIGHT_STANDBY
    STATUS_READY
		
	
[gcode_macro _WIPE]
description: Helper: Wipe nozzle at bucket
gcode:
    {% set user = printer['gcode_macro _USER_VARIABLE'] %}
	{% set wipe = user.purge.wipe %} # x,y,z location
	G90 # Absolute positioning

	# Wipe nozzle, using some of zellenralex's logic for diagonal move
#	G0 X{wipe.start.x} Y{wipe.start.y} Z{wipe.start.z} F{user.speed.wipe}
	G0 X{wipe.start.x} Y{wipe.end.y} Z{wipe.start.z} F{user.speed.wipe}
   {% for wipes in range(0, wipe.cnt) %}
		{% for coordinate in wipe.start.x, wipe.end.x %}
#			G0 X{coordinate} Y{wipe.start.y + wipe.offset * wipes}
			G0 X{coordinate} Y{wipe.end.y}  # simplified to just a L-R straight wipe like original
		{% endfor %}
	{% endfor %}

	G0 X{wipe.end.x} Y{wipe.end.y} Z{wipe.end.z}